services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: ${SERVER_HOST}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - redis
      - postgres
    env_file:
      - .env.production

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: ${WORKER_HOST}
    depends_on:
      - redis
      - postgres
    env_file:
      - .env.production

  # webrtc-server:
  #   build:
  #     context: .
  #     dockerfile: webrtc-server/Dockerfile
  #   container_name: ${WEBRTC_HOST}
  #   depends_on:
  #     - redis
  #     - postgres
  #   env_file:
  #     - .env.production

  nginx:
    image: reverse-proxy
    build:
      context: .
      dockerfile: proxy/Dockerfile
    container_name: ${NGINX_HOST}
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - server
      - worker
    restart: always
    env_file:
      - .env.production

  redis:
    image: redis:latest
    container_name: ${REDIS_HOST}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_HOST}
    ports:
      - "5433:${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env.production

volumes:
  redis-data:
  postgres-data:
